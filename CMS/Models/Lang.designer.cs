#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMS.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CMS")]
	public partial class LangDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertpage(page instance);
    partial void Updatepage(page instance);
    partial void Deletepage(page instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertproducts_connection(products_connection instance);
    partial void Updateproducts_connection(products_connection instance);
    partial void Deleteproducts_connection(products_connection instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertmenuitem(menuitem instance);
    partial void Updatemenuitem(menuitem instance);
    partial void Deletemenuitem(menuitem instance);
    partial void Insertauthor(author instance);
    partial void Updateauthor(author instance);
    partial void Deleteauthor(author instance);
    partial void Insertarticle(article instance);
    partial void Updatearticle(article instance);
    partial void Deletearticle(article instance);
    partial void Insertarticles_author(articles_author instance);
    partial void Updatearticles_author(articles_author instance);
    partial void Deletearticles_author(articles_author instance);
    partial void Insertarticles_category(articles_category instance);
    partial void Updatearticles_category(articles_category instance);
    partial void Deletearticles_category(articles_category instance);
    partial void Insertcomment(comment instance);
    partial void Updatecomment(comment instance);
    partial void Deletecomment(comment instance);
    partial void Inserttag(tag instance);
    partial void Updatetag(tag instance);
    partial void Deletetag(tag instance);
    partial void Inserttags_article(tags_article instance);
    partial void Updatetags_article(tags_article instance);
    partial void Deletetags_article(tags_article instance);
    partial void Insertdocs_product(docs_product instance);
    partial void Updatedocs_product(docs_product instance);
    partial void Deletedocs_product(docs_product instance);
    partial void Insertproducts_connection1(products_connection1 instance);
    partial void Updateproducts_connection1(products_connection1 instance);
    partial void Deleteproducts_connection1(products_connection1 instance);
    partial void Insertimage(image instance);
    partial void Updateimage(image instance);
    partial void Deleteimage(image instance);
    partial void Insertdoc(doc instance);
    partial void Updatedoc(doc instance);
    partial void Deletedoc(doc instance);
    partial void Inserttexts_value(texts_value instance);
    partial void Updatetexts_value(texts_value instance);
    partial void Deletetexts_value(texts_value instance);
    partial void Inserttext(text instance);
    partial void Updatetext(text instance);
    partial void Deletetext(text instance);
    #endregion
		
		public LangDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LangDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LangDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LangDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LangDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<page> pages
		{
			get
			{
				return this.GetTable<page>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<products_connection> products_connections
		{
			get
			{
				return this.GetTable<products_connection>();
			}
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<menuitem> menuitems
		{
			get
			{
				return this.GetTable<menuitem>();
			}
		}
		
		public System.Data.Linq.Table<author> authors
		{
			get
			{
				return this.GetTable<author>();
			}
		}
		
		public System.Data.Linq.Table<article> articles
		{
			get
			{
				return this.GetTable<article>();
			}
		}
		
		public System.Data.Linq.Table<articles_author> articles_authors
		{
			get
			{
				return this.GetTable<articles_author>();
			}
		}
		
		public System.Data.Linq.Table<articles_category> articles_categories
		{
			get
			{
				return this.GetTable<articles_category>();
			}
		}
		
		public System.Data.Linq.Table<comment> comments
		{
			get
			{
				return this.GetTable<comment>();
			}
		}
		
		public System.Data.Linq.Table<tag> tags
		{
			get
			{
				return this.GetTable<tag>();
			}
		}
		
		public System.Data.Linq.Table<tags_article> tags_articles
		{
			get
			{
				return this.GetTable<tags_article>();
			}
		}
		
		public System.Data.Linq.Table<docs_product> docs_products
		{
			get
			{
				return this.GetTable<docs_product>();
			}
		}
		
		public System.Data.Linq.Table<products_connection1> products_connection1s
		{
			get
			{
				return this.GetTable<products_connection1>();
			}
		}
		
		public System.Data.Linq.Table<image> images
		{
			get
			{
				return this.GetTable<image>();
			}
		}
		
		public System.Data.Linq.Table<doc> docs
		{
			get
			{
				return this.GetTable<doc>();
			}
		}
		
		public System.Data.Linq.Table<texts_value> texts_values
		{
			get
			{
				return this.GetTable<texts_value>();
			}
		}
		
		public System.Data.Linq.Table<text> texts
		{
			get
			{
				return this.GetTable<text>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pages")]
	public partial class page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _title_text_id;
		
		private long _text_text_id;
		
		private EntityRef<text> _text;
		
		private EntityRef<text> _text1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Ontitle_text_idChanging(long value);
    partial void Ontitle_text_idChanged();
    partial void Ontext_text_idChanging(long value);
    partial void Ontext_text_idChanged();
    #endregion
		
		public page()
		{
			this._text = default(EntityRef<text>);
			this._text1 = default(EntityRef<text>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_text_id", DbType="BigInt NOT NULL")]
		public long title_text_id
		{
			get
			{
				return this._title_text_id;
			}
			set
			{
				if ((this._title_text_id != value))
				{
					if (this._text1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontitle_text_idChanging(value);
					this.SendPropertyChanging();
					this._title_text_id = value;
					this.SendPropertyChanged("title_text_id");
					this.Ontitle_text_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text_text_id", DbType="BigInt NOT NULL")]
		public long text_text_id
		{
			get
			{
				return this._text_text_id;
			}
			set
			{
				if ((this._text_text_id != value))
				{
					if (this._text.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontext_text_idChanging(value);
					this.SendPropertyChanging();
					this._text_text_id = value;
					this.SendPropertyChanged("text_text_id");
					this.Ontext_text_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_page", Storage="_text", ThisKey="text_text_id", OtherKey="id", IsForeignKey=true)]
		public text text
		{
			get
			{
				return this._text.Entity;
			}
			set
			{
				text previousValue = this._text.Entity;
				if (((previousValue != value) 
							|| (this._text.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text.Entity = null;
						previousValue.pages.Remove(this);
					}
					this._text.Entity = value;
					if ((value != null))
					{
						value.pages.Add(this);
						this._text_text_id = value.id;
					}
					else
					{
						this._text_text_id = default(long);
					}
					this.SendPropertyChanged("text");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_page1", Storage="_text1", ThisKey="title_text_id", OtherKey="id", IsForeignKey=true)]
		public text text1
		{
			get
			{
				return this._text1.Entity;
			}
			set
			{
				text previousValue = this._text1.Entity;
				if (((previousValue != value) 
							|| (this._text1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text1.Entity = null;
						previousValue.pages1.Remove(this);
					}
					this._text1.Entity = value;
					if ((value != null))
					{
						value.pages1.Add(this);
						this._title_text_id = value.id;
					}
					else
					{
						this._title_text_id = default(long);
					}
					this.SendPropertyChanged("text1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _title_text_id;
		
		private long _description_text_id;
		
		private long _text_text_id;
		
		private EntitySet<products_connection> _products_connections;
		
		private EntitySet<products_connection> _products_connections1;
		
		private EntitySet<docs_product> _docs_products;
		
		private EntitySet<products_connection1> _products_connection1s;
		
		private EntitySet<products_connection1> _products_connection1s1;
		
		private EntityRef<text> _text;
		
		private EntityRef<text> _text1;
		
		private EntityRef<text> _text2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Ontitle_text_idChanging(long value);
    partial void Ontitle_text_idChanged();
    partial void Ondescription_text_idChanging(long value);
    partial void Ondescription_text_idChanged();
    partial void Ontext_text_idChanging(long value);
    partial void Ontext_text_idChanged();
    #endregion
		
		public product()
		{
			this._products_connections = new EntitySet<products_connection>(new Action<products_connection>(this.attach_products_connections), new Action<products_connection>(this.detach_products_connections));
			this._products_connections1 = new EntitySet<products_connection>(new Action<products_connection>(this.attach_products_connections1), new Action<products_connection>(this.detach_products_connections1));
			this._docs_products = new EntitySet<docs_product>(new Action<docs_product>(this.attach_docs_products), new Action<docs_product>(this.detach_docs_products));
			this._products_connection1s = new EntitySet<products_connection1>(new Action<products_connection1>(this.attach_products_connection1s), new Action<products_connection1>(this.detach_products_connection1s));
			this._products_connection1s1 = new EntitySet<products_connection1>(new Action<products_connection1>(this.attach_products_connection1s1), new Action<products_connection1>(this.detach_products_connection1s1));
			this._text = default(EntityRef<text>);
			this._text1 = default(EntityRef<text>);
			this._text2 = default(EntityRef<text>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_text_id", DbType="BigInt NOT NULL")]
		public long title_text_id
		{
			get
			{
				return this._title_text_id;
			}
			set
			{
				if ((this._title_text_id != value))
				{
					if (this._text2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontitle_text_idChanging(value);
					this.SendPropertyChanging();
					this._title_text_id = value;
					this.SendPropertyChanged("title_text_id");
					this.Ontitle_text_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description_text_id", DbType="BigInt NOT NULL")]
		public long description_text_id
		{
			get
			{
				return this._description_text_id;
			}
			set
			{
				if ((this._description_text_id != value))
				{
					if (this._text.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondescription_text_idChanging(value);
					this.SendPropertyChanging();
					this._description_text_id = value;
					this.SendPropertyChanged("description_text_id");
					this.Ondescription_text_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text_text_id", DbType="BigInt NOT NULL")]
		public long text_text_id
		{
			get
			{
				return this._text_text_id;
			}
			set
			{
				if ((this._text_text_id != value))
				{
					if (this._text1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontext_text_idChanging(value);
					this.SendPropertyChanging();
					this._text_text_id = value;
					this.SendPropertyChanged("text_text_id");
					this.Ontext_text_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_connection", Storage="_products_connections", ThisKey="id", OtherKey="product_id")]
		public EntitySet<products_connection> products_connections
		{
			get
			{
				return this._products_connections;
			}
			set
			{
				this._products_connections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_connection1", Storage="_products_connections1", ThisKey="id", OtherKey="product_id_2")]
		public EntitySet<products_connection> products_connections1
		{
			get
			{
				return this._products_connections1;
			}
			set
			{
				this._products_connections1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_docs_product", Storage="_docs_products", ThisKey="id", OtherKey="product_id")]
		public EntitySet<docs_product> docs_products
		{
			get
			{
				return this._docs_products;
			}
			set
			{
				this._docs_products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_connection11", Storage="_products_connection1s", ThisKey="id", OtherKey="product_id")]
		public EntitySet<products_connection1> products_connection1s
		{
			get
			{
				return this._products_connection1s;
			}
			set
			{
				this._products_connection1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_connection12", Storage="_products_connection1s1", ThisKey="id", OtherKey="product_id_2")]
		public EntitySet<products_connection1> products_connection1s1
		{
			get
			{
				return this._products_connection1s1;
			}
			set
			{
				this._products_connection1s1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_product", Storage="_text", ThisKey="description_text_id", OtherKey="id", IsForeignKey=true)]
		public text text
		{
			get
			{
				return this._text.Entity;
			}
			set
			{
				text previousValue = this._text.Entity;
				if (((previousValue != value) 
							|| (this._text.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text.Entity = null;
						previousValue.products.Remove(this);
					}
					this._text.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._description_text_id = value.id;
					}
					else
					{
						this._description_text_id = default(long);
					}
					this.SendPropertyChanged("text");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_product1", Storage="_text1", ThisKey="text_text_id", OtherKey="id", IsForeignKey=true)]
		public text text1
		{
			get
			{
				return this._text1.Entity;
			}
			set
			{
				text previousValue = this._text1.Entity;
				if (((previousValue != value) 
							|| (this._text1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text1.Entity = null;
						previousValue.products1.Remove(this);
					}
					this._text1.Entity = value;
					if ((value != null))
					{
						value.products1.Add(this);
						this._text_text_id = value.id;
					}
					else
					{
						this._text_text_id = default(long);
					}
					this.SendPropertyChanged("text1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_product2", Storage="_text2", ThisKey="title_text_id", OtherKey="id", IsForeignKey=true)]
		public text text2
		{
			get
			{
				return this._text2.Entity;
			}
			set
			{
				text previousValue = this._text2.Entity;
				if (((previousValue != value) 
							|| (this._text2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text2.Entity = null;
						previousValue.products2.Remove(this);
					}
					this._text2.Entity = value;
					if ((value != null))
					{
						value.products2.Add(this);
						this._title_text_id = value.id;
					}
					else
					{
						this._title_text_id = default(long);
					}
					this.SendPropertyChanged("text2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products_connections(products_connection entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_products_connections(products_connection entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_products_connections1(products_connection entity)
		{
			this.SendPropertyChanging();
			entity.product1 = this;
		}
		
		private void detach_products_connections1(products_connection entity)
		{
			this.SendPropertyChanging();
			entity.product1 = null;
		}
		
		private void attach_docs_products(docs_product entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_docs_products(docs_product entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_products_connection1s(products_connection1 entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_products_connection1s(products_connection1 entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_products_connection1s1(products_connection1 entity)
		{
			this.SendPropertyChanging();
			entity.product1 = this;
		}
		
		private void detach_products_connection1s1(products_connection1 entity)
		{
			this.SendPropertyChanging();
			entity.product1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products_connections")]
	public partial class products_connection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _product_id;
		
		private long _product_id_2;
		
		private EntityRef<product> _product;
		
		private EntityRef<product> _product1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(long value);
    partial void Onproduct_idChanged();
    partial void Onproduct_id_2Changing(long value);
    partial void Onproduct_id_2Changed();
    #endregion
		
		public products_connection()
		{
			this._product = default(EntityRef<product>);
			this._product1 = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id_2", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long product_id_2
		{
			get
			{
				return this._product_id_2;
			}
			set
			{
				if ((this._product_id_2 != value))
				{
					if (this._product1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_id_2Changing(value);
					this.SendPropertyChanging();
					this._product_id_2 = value;
					this.SendPropertyChanged("product_id_2");
					this.Onproduct_id_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_connection", Storage="_product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.products_connections.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.products_connections.Add(this);
						this._product_id = value.id;
					}
					else
					{
						this._product_id = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_connection1", Storage="_product1", ThisKey="product_id_2", OtherKey="id", IsForeignKey=true)]
		public product product1
		{
			get
			{
				return this._product1.Entity;
			}
			set
			{
				product previousValue = this._product1.Entity;
				if (((previousValue != value) 
							|| (this._product1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product1.Entity = null;
						previousValue.products_connections1.Remove(this);
					}
					this._product1.Entity = value;
					if ((value != null))
					{
						value.products_connections1.Add(this);
						this._product_id_2 = value.id;
					}
					else
					{
						this._product_id_2 = default(long);
					}
					this.SendPropertyChanged("product1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.categories")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _name_text_id;
		
		private System.Nullable<long> _parentid;
		
		private long _alias_text_id;
		
		private System.DateTime _date;
		
		private EntitySet<category> _categories;
		
		private EntitySet<menuitem> _menuitems;
		
		private EntitySet<articles_category> _articles_categories;
		
		private EntityRef<category> _category1;
		
		private EntityRef<text> _text;
		
		private EntityRef<text> _text1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onname_text_idChanging(long value);
    partial void Onname_text_idChanged();
    partial void OnparentidChanging(System.Nullable<long> value);
    partial void OnparentidChanged();
    partial void Onalias_text_idChanging(long value);
    partial void Onalias_text_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public category()
		{
			this._categories = new EntitySet<category>(new Action<category>(this.attach_categories), new Action<category>(this.detach_categories));
			this._menuitems = new EntitySet<menuitem>(new Action<menuitem>(this.attach_menuitems), new Action<menuitem>(this.detach_menuitems));
			this._articles_categories = new EntitySet<articles_category>(new Action<articles_category>(this.attach_articles_categories), new Action<articles_category>(this.detach_articles_categories));
			this._category1 = default(EntityRef<category>);
			this._text = default(EntityRef<text>);
			this._text1 = default(EntityRef<text>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_text_id", DbType="BigInt NOT NULL")]
		public long name_text_id
		{
			get
			{
				return this._name_text_id;
			}
			set
			{
				if ((this._name_text_id != value))
				{
					if (this._text.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onname_text_idChanging(value);
					this.SendPropertyChanging();
					this._name_text_id = value;
					this.SendPropertyChanged("name_text_id");
					this.Onname_text_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentid", DbType="BigInt")]
		public System.Nullable<long> parentid
		{
			get
			{
				return this._parentid;
			}
			set
			{
				if ((this._parentid != value))
				{
					if (this._category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentidChanging(value);
					this.SendPropertyChanging();
					this._parentid = value;
					this.SendPropertyChanged("parentid");
					this.OnparentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alias_text_id", DbType="BigInt NOT NULL")]
		public long alias_text_id
		{
			get
			{
				return this._alias_text_id;
			}
			set
			{
				if ((this._alias_text_id != value))
				{
					if (this._text1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onalias_text_idChanging(value);
					this.SendPropertyChanging();
					this._alias_text_id = value;
					this.SendPropertyChanged("alias_text_id");
					this.Onalias_text_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_category", Storage="_categories", ThisKey="id", OtherKey="parentid")]
		public EntitySet<category> categories
		{
			get
			{
				return this._categories;
			}
			set
			{
				this._categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_menuitem", Storage="_menuitems", ThisKey="id", OtherKey="categoriesid")]
		public EntitySet<menuitem> menuitems
		{
			get
			{
				return this._menuitems;
			}
			set
			{
				this._menuitems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_articles_category", Storage="_articles_categories", ThisKey="id", OtherKey="categoriesid")]
		public EntitySet<articles_category> articles_categories
		{
			get
			{
				return this._articles_categories;
			}
			set
			{
				this._articles_categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_category", Storage="_category1", ThisKey="parentid", OtherKey="id", IsForeignKey=true)]
		public category category1
		{
			get
			{
				return this._category1.Entity;
			}
			set
			{
				category previousValue = this._category1.Entity;
				if (((previousValue != value) 
							|| (this._category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category1.Entity = null;
						previousValue.categories.Remove(this);
					}
					this._category1.Entity = value;
					if ((value != null))
					{
						value.categories.Add(this);
						this._parentid = value.id;
					}
					else
					{
						this._parentid = default(Nullable<long>);
					}
					this.SendPropertyChanged("category1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_category", Storage="_text", ThisKey="name_text_id", OtherKey="id", IsForeignKey=true)]
		public text text
		{
			get
			{
				return this._text.Entity;
			}
			set
			{
				text previousValue = this._text.Entity;
				if (((previousValue != value) 
							|| (this._text.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text.Entity = null;
						previousValue.categories.Remove(this);
					}
					this._text.Entity = value;
					if ((value != null))
					{
						value.categories.Add(this);
						this._name_text_id = value.id;
					}
					else
					{
						this._name_text_id = default(long);
					}
					this.SendPropertyChanged("text");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_category1", Storage="_text1", ThisKey="alias_text_id", OtherKey="id", IsForeignKey=true)]
		public text text1
		{
			get
			{
				return this._text1.Entity;
			}
			set
			{
				text previousValue = this._text1.Entity;
				if (((previousValue != value) 
							|| (this._text1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text1.Entity = null;
						previousValue.categories1.Remove(this);
					}
					this._text1.Entity = value;
					if ((value != null))
					{
						value.categories1.Add(this);
						this._alias_text_id = value.id;
					}
					else
					{
						this._alias_text_id = default(long);
					}
					this.SendPropertyChanged("text1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_categories(category entity)
		{
			this.SendPropertyChanging();
			entity.category1 = this;
		}
		
		private void detach_categories(category entity)
		{
			this.SendPropertyChanging();
			entity.category1 = null;
		}
		
		private void attach_menuitems(menuitem entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_menuitems(menuitem entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
		
		private void attach_articles_categories(articles_category entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_articles_categories(articles_category entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.menuitems")]
	public partial class menuitem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private System.Nullable<long> _categoriesid;
		
		private System.Nullable<long> _articlesid;
		
		private string _link;
		
		private System.DateTime _date;
		
		private EntityRef<category> _category;
		
		private EntityRef<article> _article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncategoriesidChanging(System.Nullable<long> value);
    partial void OncategoriesidChanged();
    partial void OnarticlesidChanging(System.Nullable<long> value);
    partial void OnarticlesidChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public menuitem()
		{
			this._category = default(EntityRef<category>);
			this._article = default(EntityRef<article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoriesid", DbType="BigInt")]
		public System.Nullable<long> categoriesid
		{
			get
			{
				return this._categoriesid;
			}
			set
			{
				if ((this._categoriesid != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoriesidChanging(value);
					this.SendPropertyChanging();
					this._categoriesid = value;
					this.SendPropertyChanged("categoriesid");
					this.OncategoriesidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articlesid", DbType="BigInt")]
		public System.Nullable<long> articlesid
		{
			get
			{
				return this._articlesid;
			}
			set
			{
				if ((this._articlesid != value))
				{
					if (this._article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarticlesidChanging(value);
					this.SendPropertyChanging();
					this._articlesid = value;
					this.SendPropertyChanged("articlesid");
					this.OnarticlesidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="VarChar(MAX)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_menuitem", Storage="_category", ThisKey="categoriesid", OtherKey="id", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.menuitems.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.menuitems.Add(this);
						this._categoriesid = value.id;
					}
					else
					{
						this._categoriesid = default(Nullable<long>);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_menuitem", Storage="_article", ThisKey="articlesid", OtherKey="id", IsForeignKey=true)]
		public article article
		{
			get
			{
				return this._article.Entity;
			}
			set
			{
				article previousValue = this._article.Entity;
				if (((previousValue != value) 
							|| (this._article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._article.Entity = null;
						previousValue.menuitems.Remove(this);
					}
					this._article.Entity = value;
					if ((value != null))
					{
						value.menuitems.Add(this);
						this._articlesid = value.id;
					}
					else
					{
						this._articlesid = default(Nullable<long>);
					}
					this.SendPropertyChanged("article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.authors")]
	public partial class author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _lastname;
		
		private long _usersid;
		
		private string _description;
		
		private System.DateTime _date;
		
		private EntitySet<articles_author> _articles_authors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnusersidChanging(long value);
    partial void OnusersidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public author()
		{
			this._articles_authors = new EntitySet<articles_author>(new Action<articles_author>(this.attach_articles_authors), new Action<articles_author>(this.detach_articles_authors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usersid", DbType="BigInt NOT NULL")]
		public long usersid
		{
			get
			{
				return this._usersid;
			}
			set
			{
				if ((this._usersid != value))
				{
					this.OnusersidChanging(value);
					this.SendPropertyChanging();
					this._usersid = value;
					this.SendPropertyChanged("usersid");
					this.OnusersidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="author_articles_author", Storage="_articles_authors", ThisKey="id", OtherKey="authorsid")]
		public EntitySet<articles_author> articles_authors
		{
			get
			{
				return this._articles_authors;
			}
			set
			{
				this._articles_authors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_articles_authors(articles_author entity)
		{
			this.SendPropertyChanging();
			entity.author = this;
		}
		
		private void detach_articles_authors(articles_author entity)
		{
			this.SendPropertyChanging();
			entity.author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.articles")]
	public partial class article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _title;
		
		private string _alias;
		
		private string _introtext;
		
		private string _fulltext;
		
		private System.DateTime _date;
		
		private System.DateTime _date_published;
		
		private System.DateTime _date_pullback;
		
		private System.DateTime _date_lastmod;
		
		private long _hits;
		
		private int _modifications_count;
		
		private int _published;
		
		private long _level;
		
		private EntitySet<menuitem> _menuitems;
		
		private EntitySet<articles_author> _articles_authors;
		
		private EntitySet<articles_category> _articles_categories;
		
		private EntitySet<comment> _comments;
		
		private EntitySet<tags_article> _tags_articles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnaliasChanging(string value);
    partial void OnaliasChanged();
    partial void OnintrotextChanging(string value);
    partial void OnintrotextChanged();
    partial void OnfulltextChanging(string value);
    partial void OnfulltextChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Ondate_publishedChanging(System.DateTime value);
    partial void Ondate_publishedChanged();
    partial void Ondate_pullbackChanging(System.DateTime value);
    partial void Ondate_pullbackChanged();
    partial void Ondate_lastmodChanging(System.DateTime value);
    partial void Ondate_lastmodChanged();
    partial void OnhitsChanging(long value);
    partial void OnhitsChanged();
    partial void Onmodifications_countChanging(int value);
    partial void Onmodifications_countChanged();
    partial void OnpublishedChanging(int value);
    partial void OnpublishedChanged();
    partial void OnlevelChanging(long value);
    partial void OnlevelChanged();
    #endregion
		
		public article()
		{
			this._menuitems = new EntitySet<menuitem>(new Action<menuitem>(this.attach_menuitems), new Action<menuitem>(this.detach_menuitems));
			this._articles_authors = new EntitySet<articles_author>(new Action<articles_author>(this.attach_articles_authors), new Action<articles_author>(this.detach_articles_authors));
			this._articles_categories = new EntitySet<articles_category>(new Action<articles_category>(this.attach_articles_categories), new Action<articles_category>(this.detach_articles_categories));
			this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
			this._tags_articles = new EntitySet<tags_article>(new Action<tags_article>(this.attach_tags_articles), new Action<tags_article>(this.detach_tags_articles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alias", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string alias
		{
			get
			{
				return this._alias;
			}
			set
			{
				if ((this._alias != value))
				{
					this.OnaliasChanging(value);
					this.SendPropertyChanging();
					this._alias = value;
					this.SendPropertyChanged("alias");
					this.OnaliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_introtext", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string introtext
		{
			get
			{
				return this._introtext;
			}
			set
			{
				if ((this._introtext != value))
				{
					this.OnintrotextChanging(value);
					this.SendPropertyChanging();
					this._introtext = value;
					this.SendPropertyChanged("introtext");
					this.OnintrotextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fulltext", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string fulltext
		{
			get
			{
				return this._fulltext;
			}
			set
			{
				if ((this._fulltext != value))
				{
					this.OnfulltextChanging(value);
					this.SendPropertyChanging();
					this._fulltext = value;
					this.SendPropertyChanged("fulltext");
					this.OnfulltextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_published", DbType="DateTime NOT NULL")]
		public System.DateTime date_published
		{
			get
			{
				return this._date_published;
			}
			set
			{
				if ((this._date_published != value))
				{
					this.Ondate_publishedChanging(value);
					this.SendPropertyChanging();
					this._date_published = value;
					this.SendPropertyChanged("date_published");
					this.Ondate_publishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_pullback", DbType="DateTime NOT NULL")]
		public System.DateTime date_pullback
		{
			get
			{
				return this._date_pullback;
			}
			set
			{
				if ((this._date_pullback != value))
				{
					this.Ondate_pullbackChanging(value);
					this.SendPropertyChanging();
					this._date_pullback = value;
					this.SendPropertyChanged("date_pullback");
					this.Ondate_pullbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_lastmod", DbType="DateTime NOT NULL")]
		public System.DateTime date_lastmod
		{
			get
			{
				return this._date_lastmod;
			}
			set
			{
				if ((this._date_lastmod != value))
				{
					this.Ondate_lastmodChanging(value);
					this.SendPropertyChanging();
					this._date_lastmod = value;
					this.SendPropertyChanged("date_lastmod");
					this.Ondate_lastmodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hits", DbType="BigInt NOT NULL")]
		public long hits
		{
			get
			{
				return this._hits;
			}
			set
			{
				if ((this._hits != value))
				{
					this.OnhitsChanging(value);
					this.SendPropertyChanging();
					this._hits = value;
					this.SendPropertyChanged("hits");
					this.OnhitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modifications_count", DbType="Int NOT NULL")]
		public int modifications_count
		{
			get
			{
				return this._modifications_count;
			}
			set
			{
				if ((this._modifications_count != value))
				{
					this.Onmodifications_countChanging(value);
					this.SendPropertyChanging();
					this._modifications_count = value;
					this.SendPropertyChanged("modifications_count");
					this.Onmodifications_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="Int NOT NULL")]
		public int published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="BigInt NOT NULL")]
		public long level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_menuitem", Storage="_menuitems", ThisKey="id", OtherKey="articlesid")]
		public EntitySet<menuitem> menuitems
		{
			get
			{
				return this._menuitems;
			}
			set
			{
				this._menuitems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_articles_author", Storage="_articles_authors", ThisKey="id", OtherKey="articlesid")]
		public EntitySet<articles_author> articles_authors
		{
			get
			{
				return this._articles_authors;
			}
			set
			{
				this._articles_authors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_articles_category", Storage="_articles_categories", ThisKey="id", OtherKey="articlesid")]
		public EntitySet<articles_category> articles_categories
		{
			get
			{
				return this._articles_categories;
			}
			set
			{
				this._articles_categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_comment", Storage="_comments", ThisKey="id", OtherKey="articlesid")]
		public EntitySet<comment> comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_tags_article", Storage="_tags_articles", ThisKey="id", OtherKey="articlesid")]
		public EntitySet<tags_article> tags_articles
		{
			get
			{
				return this._tags_articles;
			}
			set
			{
				this._tags_articles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_menuitems(menuitem entity)
		{
			this.SendPropertyChanging();
			entity.article = this;
		}
		
		private void detach_menuitems(menuitem entity)
		{
			this.SendPropertyChanging();
			entity.article = null;
		}
		
		private void attach_articles_authors(articles_author entity)
		{
			this.SendPropertyChanging();
			entity.article = this;
		}
		
		private void detach_articles_authors(articles_author entity)
		{
			this.SendPropertyChanging();
			entity.article = null;
		}
		
		private void attach_articles_categories(articles_category entity)
		{
			this.SendPropertyChanging();
			entity.article = this;
		}
		
		private void detach_articles_categories(articles_category entity)
		{
			this.SendPropertyChanging();
			entity.article = null;
		}
		
		private void attach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.article = this;
		}
		
		private void detach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.article = null;
		}
		
		private void attach_tags_articles(tags_article entity)
		{
			this.SendPropertyChanging();
			entity.article = this;
		}
		
		private void detach_tags_articles(tags_article entity)
		{
			this.SendPropertyChanging();
			entity.article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.articles_authors")]
	public partial class articles_author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _articlesid;
		
		private long _authorsid;
		
		private System.DateTime _date;
		
		private EntityRef<article> _article;
		
		private EntityRef<author> _author;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnarticlesidChanging(long value);
    partial void OnarticlesidChanged();
    partial void OnauthorsidChanging(long value);
    partial void OnauthorsidChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public articles_author()
		{
			this._article = default(EntityRef<article>);
			this._author = default(EntityRef<author>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articlesid", DbType="BigInt NOT NULL")]
		public long articlesid
		{
			get
			{
				return this._articlesid;
			}
			set
			{
				if ((this._articlesid != value))
				{
					if (this._article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarticlesidChanging(value);
					this.SendPropertyChanging();
					this._articlesid = value;
					this.SendPropertyChanged("articlesid");
					this.OnarticlesidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorsid", DbType="BigInt NOT NULL")]
		public long authorsid
		{
			get
			{
				return this._authorsid;
			}
			set
			{
				if ((this._authorsid != value))
				{
					if (this._author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnauthorsidChanging(value);
					this.SendPropertyChanging();
					this._authorsid = value;
					this.SendPropertyChanged("authorsid");
					this.OnauthorsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_articles_author", Storage="_article", ThisKey="articlesid", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public article article
		{
			get
			{
				return this._article.Entity;
			}
			set
			{
				article previousValue = this._article.Entity;
				if (((previousValue != value) 
							|| (this._article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._article.Entity = null;
						previousValue.articles_authors.Remove(this);
					}
					this._article.Entity = value;
					if ((value != null))
					{
						value.articles_authors.Add(this);
						this._articlesid = value.id;
					}
					else
					{
						this._articlesid = default(long);
					}
					this.SendPropertyChanged("article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="author_articles_author", Storage="_author", ThisKey="authorsid", OtherKey="id", IsForeignKey=true)]
		public author author
		{
			get
			{
				return this._author.Entity;
			}
			set
			{
				author previousValue = this._author.Entity;
				if (((previousValue != value) 
							|| (this._author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._author.Entity = null;
						previousValue.articles_authors.Remove(this);
					}
					this._author.Entity = value;
					if ((value != null))
					{
						value.articles_authors.Add(this);
						this._authorsid = value.id;
					}
					else
					{
						this._authorsid = default(long);
					}
					this.SendPropertyChanged("author");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.articles_categories")]
	public partial class articles_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _articlesid;
		
		private long _categoriesid;
		
		private System.DateTime _date;
		
		private EntityRef<article> _article;
		
		private EntityRef<category> _category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnarticlesidChanging(long value);
    partial void OnarticlesidChanged();
    partial void OncategoriesidChanging(long value);
    partial void OncategoriesidChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public articles_category()
		{
			this._article = default(EntityRef<article>);
			this._category = default(EntityRef<category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articlesid", DbType="BigInt NOT NULL")]
		public long articlesid
		{
			get
			{
				return this._articlesid;
			}
			set
			{
				if ((this._articlesid != value))
				{
					if (this._article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarticlesidChanging(value);
					this.SendPropertyChanging();
					this._articlesid = value;
					this.SendPropertyChanged("articlesid");
					this.OnarticlesidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoriesid", DbType="BigInt NOT NULL")]
		public long categoriesid
		{
			get
			{
				return this._categoriesid;
			}
			set
			{
				if ((this._categoriesid != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoriesidChanging(value);
					this.SendPropertyChanging();
					this._categoriesid = value;
					this.SendPropertyChanged("categoriesid");
					this.OncategoriesidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_articles_category", Storage="_article", ThisKey="articlesid", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public article article
		{
			get
			{
				return this._article.Entity;
			}
			set
			{
				article previousValue = this._article.Entity;
				if (((previousValue != value) 
							|| (this._article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._article.Entity = null;
						previousValue.articles_categories.Remove(this);
					}
					this._article.Entity = value;
					if ((value != null))
					{
						value.articles_categories.Add(this);
						this._articlesid = value.id;
					}
					else
					{
						this._articlesid = default(long);
					}
					this.SendPropertyChanged("article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_articles_category", Storage="_category", ThisKey="categoriesid", OtherKey="id", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.articles_categories.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.articles_categories.Add(this);
						this._categoriesid = value.id;
					}
					else
					{
						this._categoriesid = default(long);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comments")]
	public partial class comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _title;
		
		private string _text;
		
		private System.Nullable<long> _usersid;
		
		private string _useralias;
		
		private System.Nullable<long> _parentid;
		
		private string _email;
		
		private string _ip;
		
		private long _articlesid;
		
		private EntitySet<comment> _comments;
		
		private EntityRef<article> _article;
		
		private EntityRef<comment> _comment1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnusersidChanging(System.Nullable<long> value);
    partial void OnusersidChanged();
    partial void OnuseraliasChanging(string value);
    partial void OnuseraliasChanged();
    partial void OnparentidChanging(System.Nullable<long> value);
    partial void OnparentidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnarticlesidChanging(long value);
    partial void OnarticlesidChanged();
    #endregion
		
		public comment()
		{
			this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
			this._article = default(EntityRef<article>);
			this._comment1 = default(EntityRef<comment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usersid", DbType="BigInt")]
		public System.Nullable<long> usersid
		{
			get
			{
				return this._usersid;
			}
			set
			{
				if ((this._usersid != value))
				{
					this.OnusersidChanging(value);
					this.SendPropertyChanging();
					this._usersid = value;
					this.SendPropertyChanged("usersid");
					this.OnusersidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useralias", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string useralias
		{
			get
			{
				return this._useralias;
			}
			set
			{
				if ((this._useralias != value))
				{
					this.OnuseraliasChanging(value);
					this.SendPropertyChanging();
					this._useralias = value;
					this.SendPropertyChanged("useralias");
					this.OnuseraliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentid", DbType="BigInt")]
		public System.Nullable<long> parentid
		{
			get
			{
				return this._parentid;
			}
			set
			{
				if ((this._parentid != value))
				{
					if (this._comment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentidChanging(value);
					this.SendPropertyChanging();
					this._parentid = value;
					this.SendPropertyChanged("parentid");
					this.OnparentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articlesid", DbType="BigInt NOT NULL")]
		public long articlesid
		{
			get
			{
				return this._articlesid;
			}
			set
			{
				if ((this._articlesid != value))
				{
					if (this._article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarticlesidChanging(value);
					this.SendPropertyChanging();
					this._articlesid = value;
					this.SendPropertyChanged("articlesid");
					this.OnarticlesidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comment_comment", Storage="_comments", ThisKey="id", OtherKey="parentid")]
		public EntitySet<comment> comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_comment", Storage="_article", ThisKey="articlesid", OtherKey="id", IsForeignKey=true)]
		public article article
		{
			get
			{
				return this._article.Entity;
			}
			set
			{
				article previousValue = this._article.Entity;
				if (((previousValue != value) 
							|| (this._article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._article.Entity = null;
						previousValue.comments.Remove(this);
					}
					this._article.Entity = value;
					if ((value != null))
					{
						value.comments.Add(this);
						this._articlesid = value.id;
					}
					else
					{
						this._articlesid = default(long);
					}
					this.SendPropertyChanged("article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comment_comment", Storage="_comment1", ThisKey="parentid", OtherKey="id", IsForeignKey=true)]
		public comment comment1
		{
			get
			{
				return this._comment1.Entity;
			}
			set
			{
				comment previousValue = this._comment1.Entity;
				if (((previousValue != value) 
							|| (this._comment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._comment1.Entity = null;
						previousValue.comments.Remove(this);
					}
					this._comment1.Entity = value;
					if ((value != null))
					{
						value.comments.Add(this);
						this._parentid = value.id;
					}
					else
					{
						this._parentid = default(Nullable<long>);
					}
					this.SendPropertyChanged("comment1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.comment1 = this;
		}
		
		private void detach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.comment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tags")]
	public partial class tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private System.DateTime _date;
		
		private EntitySet<tags_article> _tags_articles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public tag()
		{
			this._tags_articles = new EntitySet<tags_article>(new Action<tags_article>(this.attach_tags_articles), new Action<tags_article>(this.detach_tags_articles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tag_tags_article", Storage="_tags_articles", ThisKey="id", OtherKey="tagsid")]
		public EntitySet<tags_article> tags_articles
		{
			get
			{
				return this._tags_articles;
			}
			set
			{
				this._tags_articles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tags_articles(tags_article entity)
		{
			this.SendPropertyChanging();
			entity.tag = this;
		}
		
		private void detach_tags_articles(tags_article entity)
		{
			this.SendPropertyChanging();
			entity.tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tags_articles")]
	public partial class tags_article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _tagsid;
		
		private long _articlesid;
		
		private EntityRef<article> _article;
		
		private EntityRef<tag> _tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntagsidChanging(long value);
    partial void OntagsidChanged();
    partial void OnarticlesidChanging(long value);
    partial void OnarticlesidChanged();
    #endregion
		
		public tags_article()
		{
			this._article = default(EntityRef<article>);
			this._tag = default(EntityRef<tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagsid", DbType="BigInt NOT NULL")]
		public long tagsid
		{
			get
			{
				return this._tagsid;
			}
			set
			{
				if ((this._tagsid != value))
				{
					if (this._tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntagsidChanging(value);
					this.SendPropertyChanging();
					this._tagsid = value;
					this.SendPropertyChanged("tagsid");
					this.OntagsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articlesid", DbType="BigInt NOT NULL")]
		public long articlesid
		{
			get
			{
				return this._articlesid;
			}
			set
			{
				if ((this._articlesid != value))
				{
					if (this._article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarticlesidChanging(value);
					this.SendPropertyChanging();
					this._articlesid = value;
					this.SendPropertyChanged("articlesid");
					this.OnarticlesidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_tags_article", Storage="_article", ThisKey="articlesid", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public article article
		{
			get
			{
				return this._article.Entity;
			}
			set
			{
				article previousValue = this._article.Entity;
				if (((previousValue != value) 
							|| (this._article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._article.Entity = null;
						previousValue.tags_articles.Remove(this);
					}
					this._article.Entity = value;
					if ((value != null))
					{
						value.tags_articles.Add(this);
						this._articlesid = value.id;
					}
					else
					{
						this._articlesid = default(long);
					}
					this.SendPropertyChanged("article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tag_tags_article", Storage="_tag", ThisKey="tagsid", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tag tag
		{
			get
			{
				return this._tag.Entity;
			}
			set
			{
				tag previousValue = this._tag.Entity;
				if (((previousValue != value) 
							|| (this._tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tag.Entity = null;
						previousValue.tags_articles.Remove(this);
					}
					this._tag.Entity = value;
					if ((value != null))
					{
						value.tags_articles.Add(this);
						this._tagsid = value.id;
					}
					else
					{
						this._tagsid = default(long);
					}
					this.SendPropertyChanged("tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.docs_products")]
	public partial class docs_product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _doc_id;
		
		private long _product_id;
		
		private EntityRef<product> _product;
		
		private EntityRef<doc> _doc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondoc_idChanging(long value);
    partial void Ondoc_idChanged();
    partial void Onproduct_idChanging(long value);
    partial void Onproduct_idChanged();
    #endregion
		
		public docs_product()
		{
			this._product = default(EntityRef<product>);
			this._doc = default(EntityRef<doc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doc_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long doc_id
		{
			get
			{
				return this._doc_id;
			}
			set
			{
				if ((this._doc_id != value))
				{
					if (this._doc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoc_idChanging(value);
					this.SendPropertyChanging();
					this._doc_id = value;
					this.SendPropertyChanged("doc_id");
					this.Ondoc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_docs_product", Storage="_product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.docs_products.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.docs_products.Add(this);
						this._product_id = value.id;
					}
					else
					{
						this._product_id = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doc_docs_product", Storage="_doc", ThisKey="doc_id", OtherKey="id", IsForeignKey=true)]
		public doc doc
		{
			get
			{
				return this._doc.Entity;
			}
			set
			{
				doc previousValue = this._doc.Entity;
				if (((previousValue != value) 
							|| (this._doc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doc.Entity = null;
						previousValue.docs_products.Remove(this);
					}
					this._doc.Entity = value;
					if ((value != null))
					{
						value.docs_products.Add(this);
						this._doc_id = value.id;
					}
					else
					{
						this._doc_id = default(long);
					}
					this.SendPropertyChanged("doc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products_connections")]
	public partial class products_connection1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _product_id;
		
		private long _product_id_2;
		
		private EntityRef<product> _product;
		
		private EntityRef<product> _product1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(long value);
    partial void Onproduct_idChanged();
    partial void Onproduct_id_2Changing(long value);
    partial void Onproduct_id_2Changed();
    #endregion
		
		public products_connection1()
		{
			this._product = default(EntityRef<product>);
			this._product1 = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id_2", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long product_id_2
		{
			get
			{
				return this._product_id_2;
			}
			set
			{
				if ((this._product_id_2 != value))
				{
					if (this._product1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_id_2Changing(value);
					this.SendPropertyChanging();
					this._product_id_2 = value;
					this.SendPropertyChanged("product_id_2");
					this.Onproduct_id_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_connection11", Storage="_product", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.products_connection1s.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.products_connection1s.Add(this);
						this._product_id = value.id;
					}
					else
					{
						this._product_id = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_connection12", Storage="_product1", ThisKey="product_id_2", OtherKey="id", IsForeignKey=true)]
		public product product1
		{
			get
			{
				return this._product1.Entity;
			}
			set
			{
				product previousValue = this._product1.Entity;
				if (((previousValue != value) 
							|| (this._product1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product1.Entity = null;
						previousValue.products_connection1s1.Remove(this);
					}
					this._product1.Entity = value;
					if ((value != null))
					{
						value.products_connection1s1.Add(this);
						this._product_id_2 = value.id;
					}
					else
					{
						this._product_id_2 = default(long);
					}
					this.SendPropertyChanged("product1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.images")]
	public partial class image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _path;
		
		private long _description_text_id;
		
		private EntityRef<text> _text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void Ondescription_text_idChanging(long value);
    partial void Ondescription_text_idChanged();
    #endregion
		
		public image()
		{
			this._text = default(EntityRef<text>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="VarChar(150)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description_text_id", DbType="BigInt NOT NULL")]
		public long description_text_id
		{
			get
			{
				return this._description_text_id;
			}
			set
			{
				if ((this._description_text_id != value))
				{
					if (this._text.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondescription_text_idChanging(value);
					this.SendPropertyChanging();
					this._description_text_id = value;
					this.SendPropertyChanged("description_text_id");
					this.Ondescription_text_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_image", Storage="_text", ThisKey="description_text_id", OtherKey="id", IsForeignKey=true)]
		public text text
		{
			get
			{
				return this._text.Entity;
			}
			set
			{
				text previousValue = this._text.Entity;
				if (((previousValue != value) 
							|| (this._text.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text.Entity = null;
						previousValue.images.Remove(this);
					}
					this._text.Entity = value;
					if ((value != null))
					{
						value.images.Add(this);
						this._description_text_id = value.id;
					}
					else
					{
						this._description_text_id = default(long);
					}
					this.SendPropertyChanged("text");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.docs")]
	public partial class doc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _name_text_id;
		
		private string _path;
		
		private EntitySet<docs_product> _docs_products;
		
		private EntityRef<text> _text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onname_text_idChanging(System.Nullable<long> value);
    partial void Onname_text_idChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    #endregion
		
		public doc()
		{
			this._docs_products = new EntitySet<docs_product>(new Action<docs_product>(this.attach_docs_products), new Action<docs_product>(this.detach_docs_products));
			this._text = default(EntityRef<text>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_text_id", DbType="BigInt")]
		public System.Nullable<long> name_text_id
		{
			get
			{
				return this._name_text_id;
			}
			set
			{
				if ((this._name_text_id != value))
				{
					if (this._text.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onname_text_idChanging(value);
					this.SendPropertyChanging();
					this._name_text_id = value;
					this.SendPropertyChanged("name_text_id");
					this.Onname_text_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doc_docs_product", Storage="_docs_products", ThisKey="id", OtherKey="doc_id")]
		public EntitySet<docs_product> docs_products
		{
			get
			{
				return this._docs_products;
			}
			set
			{
				this._docs_products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_doc", Storage="_text", ThisKey="name_text_id", OtherKey="id", IsForeignKey=true)]
		public text text
		{
			get
			{
				return this._text.Entity;
			}
			set
			{
				text previousValue = this._text.Entity;
				if (((previousValue != value) 
							|| (this._text.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text.Entity = null;
						previousValue.docs.Remove(this);
					}
					this._text.Entity = value;
					if ((value != null))
					{
						value.docs.Add(this);
						this._name_text_id = value.id;
					}
					else
					{
						this._name_text_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("text");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_docs_products(docs_product entity)
		{
			this.SendPropertyChanging();
			entity.doc = this;
		}
		
		private void detach_docs_products(docs_product entity)
		{
			this.SendPropertyChanging();
			entity.doc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.texts_values")]
	public partial class texts_value : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _culture;
		
		private string _value;
		
		private long _text_id;
		
		private EntityRef<text> _text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncultureChanging(string value);
    partial void OncultureChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void Ontext_idChanging(long value);
    partial void Ontext_idChanged();
    #endregion
		
		public texts_value()
		{
			this._text = default(EntityRef<text>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_culture", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string culture
		{
			get
			{
				return this._culture;
			}
			set
			{
				if ((this._culture != value))
				{
					this.OncultureChanging(value);
					this.SendPropertyChanging();
					this._culture = value;
					this.SendPropertyChanged("culture");
					this.OncultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text_id", DbType="BigInt NOT NULL")]
		public long text_id
		{
			get
			{
				return this._text_id;
			}
			set
			{
				if ((this._text_id != value))
				{
					if (this._text.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontext_idChanging(value);
					this.SendPropertyChanging();
					this._text_id = value;
					this.SendPropertyChanged("text_id");
					this.Ontext_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_texts_value", Storage="_text", ThisKey="text_id", OtherKey="id", IsForeignKey=true)]
		public text text
		{
			get
			{
				return this._text.Entity;
			}
			set
			{
				text previousValue = this._text.Entity;
				if (((previousValue != value) 
							|| (this._text.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._text.Entity = null;
						previousValue.texts_values.Remove(this);
					}
					this._text.Entity = value;
					if ((value != null))
					{
						value.texts_values.Add(this);
						this._text_id = value.id;
					}
					else
					{
						this._text_id = default(long);
					}
					this.SendPropertyChanged("text");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.texts")]
	public partial class text : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private EntitySet<page> _pages;
		
		private EntitySet<page> _pages1;
		
		private EntitySet<product> _products;
		
		private EntitySet<product> _products1;
		
		private EntitySet<product> _products2;
		
		private EntitySet<category> _categories;
		
		private EntitySet<category> _categories1;
		
		private EntitySet<image> _images;
		
		private EntitySet<doc> _docs;
		
		private EntitySet<texts_value> _texts_values;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    #endregion
		
		public text()
		{
			this._pages = new EntitySet<page>(new Action<page>(this.attach_pages), new Action<page>(this.detach_pages));
			this._pages1 = new EntitySet<page>(new Action<page>(this.attach_pages1), new Action<page>(this.detach_pages1));
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._products1 = new EntitySet<product>(new Action<product>(this.attach_products1), new Action<product>(this.detach_products1));
			this._products2 = new EntitySet<product>(new Action<product>(this.attach_products2), new Action<product>(this.detach_products2));
			this._categories = new EntitySet<category>(new Action<category>(this.attach_categories), new Action<category>(this.detach_categories));
			this._categories1 = new EntitySet<category>(new Action<category>(this.attach_categories1), new Action<category>(this.detach_categories1));
			this._images = new EntitySet<image>(new Action<image>(this.attach_images), new Action<image>(this.detach_images));
			this._docs = new EntitySet<doc>(new Action<doc>(this.attach_docs), new Action<doc>(this.detach_docs));
			this._texts_values = new EntitySet<texts_value>(new Action<texts_value>(this.attach_texts_values), new Action<texts_value>(this.detach_texts_values));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_page", Storage="_pages", ThisKey="id", OtherKey="text_text_id")]
		public EntitySet<page> pages
		{
			get
			{
				return this._pages;
			}
			set
			{
				this._pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_page1", Storage="_pages1", ThisKey="id", OtherKey="title_text_id")]
		public EntitySet<page> pages1
		{
			get
			{
				return this._pages1;
			}
			set
			{
				this._pages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_product", Storage="_products", ThisKey="id", OtherKey="description_text_id")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_product1", Storage="_products1", ThisKey="id", OtherKey="text_text_id")]
		public EntitySet<product> products1
		{
			get
			{
				return this._products1;
			}
			set
			{
				this._products1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_product2", Storage="_products2", ThisKey="id", OtherKey="title_text_id")]
		public EntitySet<product> products2
		{
			get
			{
				return this._products2;
			}
			set
			{
				this._products2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_category", Storage="_categories", ThisKey="id", OtherKey="name_text_id")]
		public EntitySet<category> categories
		{
			get
			{
				return this._categories;
			}
			set
			{
				this._categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_category1", Storage="_categories1", ThisKey="id", OtherKey="alias_text_id")]
		public EntitySet<category> categories1
		{
			get
			{
				return this._categories1;
			}
			set
			{
				this._categories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_image", Storage="_images", ThisKey="id", OtherKey="description_text_id")]
		public EntitySet<image> images
		{
			get
			{
				return this._images;
			}
			set
			{
				this._images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_doc", Storage="_docs", ThisKey="id", OtherKey="name_text_id")]
		public EntitySet<doc> docs
		{
			get
			{
				return this._docs;
			}
			set
			{
				this._docs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="text_texts_value", Storage="_texts_values", ThisKey="id", OtherKey="text_id")]
		public EntitySet<texts_value> texts_values
		{
			get
			{
				return this._texts_values;
			}
			set
			{
				this._texts_values.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.text = this;
		}
		
		private void detach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.text = null;
		}
		
		private void attach_pages1(page entity)
		{
			this.SendPropertyChanging();
			entity.text1 = this;
		}
		
		private void detach_pages1(page entity)
		{
			this.SendPropertyChanging();
			entity.text1 = null;
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.text = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.text = null;
		}
		
		private void attach_products1(product entity)
		{
			this.SendPropertyChanging();
			entity.text1 = this;
		}
		
		private void detach_products1(product entity)
		{
			this.SendPropertyChanging();
			entity.text1 = null;
		}
		
		private void attach_products2(product entity)
		{
			this.SendPropertyChanging();
			entity.text2 = this;
		}
		
		private void detach_products2(product entity)
		{
			this.SendPropertyChanging();
			entity.text2 = null;
		}
		
		private void attach_categories(category entity)
		{
			this.SendPropertyChanging();
			entity.text = this;
		}
		
		private void detach_categories(category entity)
		{
			this.SendPropertyChanging();
			entity.text = null;
		}
		
		private void attach_categories1(category entity)
		{
			this.SendPropertyChanging();
			entity.text1 = this;
		}
		
		private void detach_categories1(category entity)
		{
			this.SendPropertyChanging();
			entity.text1 = null;
		}
		
		private void attach_images(image entity)
		{
			this.SendPropertyChanging();
			entity.text = this;
		}
		
		private void detach_images(image entity)
		{
			this.SendPropertyChanging();
			entity.text = null;
		}
		
		private void attach_docs(doc entity)
		{
			this.SendPropertyChanging();
			entity.text = this;
		}
		
		private void detach_docs(doc entity)
		{
			this.SendPropertyChanging();
			entity.text = null;
		}
		
		private void attach_texts_values(texts_value entity)
		{
			this.SendPropertyChanging();
			entity.text = this;
		}
		
		private void detach_texts_values(texts_value entity)
		{
			this.SendPropertyChanging();
			entity.text = null;
		}
	}
}
#pragma warning restore 1591
